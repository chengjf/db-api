<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db/mybatis-config.properties" />
	</bean>
	
	<!-- config -->
	<bean id="configuration" class="com.chengjf.sparkdemo.config.Configuration" scope="singleton">
		<constructor-arg name="path" value="config.properties" />
	</bean>
	<!-- filter -->
	<bean id="myAfterFilterImpl" class="com.chengjf.sparkdemo.filter.impl.MyAfterFilterImpl"
		scope="singleton">
	</bean>
	
	<bean id="myBeforeFilterImpl" class="com.chengjf.sparkdemo.filter.impl.MyBeforeFilterImpl"
		scope="singleton">
	</bean>
	
	<bean id="beforeFilter" class="com.chengjf.sparkdemo.filter.MyBeforeFilter" scope="singleton">
		<property name="filterList">
			<list>
				<ref bean="myBeforeFilterImpl" />
			</list>
		</property>
	</bean>
	
	<bean id="afterFilter" class="com.chengjf.sparkdemo.filter.MyAfterFilter" scope="singleton">
		<property name="filterList">
			<list>
				<ref bean="myAfterFilterImpl" />
			</list>
		</property>
	</bean>
	
	<!-- controller -->
	<bean id="todoController" class="com.chengjf.sparkdemo.module.todo.controller.TodoController"
		scope="singleton">
		<constructor-arg name="url" value="/todo" />
		<property name="template" value="template/todo/todoList.ftl">
		</property>
	</bean>
	<bean id="todoAddController" class="com.chengjf.sparkdemo.module.todo.controller.TodoAddController"
		scope="singleton">
		<constructor-arg name="url" value="/todo/add" />
		<property name="template" value="template/todo/addTodo.ftl">
		</property>
	</bean>
	<bean id="indexController" class="com.chengjf.sparkdemo.module.index.controller.IndexController"
		scope="singleton">
		<constructor-arg name="url" value="/" />
	</bean>
	
	<!-- DAO -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}">
		</property>
		<property name="jdbcUrl" value="${c3p0.url}">
		</property>
		<property name="user" value="${c3p0.user}">
		</property>
		<property name="password" value="${c3p0.password}">
		</property>
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}">
		</property>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}">
		</property>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}">
		</property>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}">
		</property>
		<property name="minPoolSize" value="${c3p0.minPoolSize}">
		</property>
		
		<property name="acquireRetryDelay" value="1000">
		</property>
		<property name="acquireRetryAttempts" value="60">
		</property>
		<property name="breakAfterAcquireFailure" value="false">
		</property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:sql/*.xml">
		</property>
		
		<property name="typeAliasesPackage" value="com.chengjf.sparkdemo.module">
		</property>
		
	</bean>
	
	<!-- (事务管 理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置当出现Exception、RuntimeException、Exception时采用对应的事务操作 -->
	<!-- <tx:advice id="userTxAdvice" transaction-manager="transactionManager"> <tx:attributes>
		<tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"
		no-rollback-for="java.lang.RuntimeException" /> <tx:method name="insert*" propagation="REQUIRED"
		read-only="false" rollback-for="java.lang.RuntimeException" /> <tx:method name="update*"
		propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" /> <tx:method
		name="find*" propagation="SUPPORTS" /> <tx:method name="get*" propagation="SUPPORTS"
		/> <tx:method name="select*" propagation="SUPPORTS" /> </tx:attributes> </tx:advice>
		-->
	
	<!-- sqlSessionTemplate配置（支持批量） -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 参数1: sqlSessionFactory|参数2：ExecutorType -->
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>
	
	<bean id="todoDao" class="com.chengjf.sparkdemo.module.todo.dao.impl.TodoMybatisDao"
		scope="singleton" >
		<property name="sqlSessionTemplate">
			<ref bean="sqlSessionTemplate" />
		</property>
	</bean>
	
</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db/mybatis-config.properties" />
	</bean>
	
	<!-- config -->
	<bean id="configuration" class="com.chengjf.sparkdemo.config.Configuration" scope="singleton">
		<constructor-arg name="path" value="config.properties" />
	</bean>
	<!-- filter -->
	<bean id="myAfterFilterImpl" class="com.chengjf.sparkdemo.filter.impl.MyAfterFilterImpl"
		scope="singleton">
	</bean>
	
	<bean id="myBeforeFilterImpl" class="com.chengjf.sparkdemo.filter.impl.MyBeforeFilterImpl"
		scope="singleton">
	</bean>
	
	<bean id="beforeFilter" class="com.chengjf.sparkdemo.filter.MyBeforeFilter" scope="singleton">
		<property name="filterList">
			<list>
				<ref bean="myBeforeFilterImpl" />
			</list>
		</property>
	</bean>
	
	<bean id="afterFilter" class="com.chengjf.sparkdemo.filter.MyAfterFilter" scope="singleton">
		<property name="filterList">
			<list>
				<ref bean="myAfterFilterImpl" />
			</list>
		</property>
	</bean>
	
	<!-- controller -->
	<bean id="todoController" class="com.chengjf.sparkdemo.module.todo.controller.TodoController"
		scope="singleton">
		<constructor-arg name="url" value="/todo" />
	</bean>
	<bean id="todoAddController" class="com.chengjf.sparkdemo.module.todo.controller.TodoAddController"
		scope="singleton">
		<constructor-arg name="url" value="/todo/add" />
	</bean>
	<bean id="indexController" class="com.chengjf.sparkdemo.module.index.controller.IndexController"
		scope="singleton">
		<constructor-arg name="url" value="/" />
	</bean>
	
	<!-- DAO -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialPoolSize" value="${initialSize}">
		</property>
		<!-- 连接池最大数量 -->
		<property name="maxPoolSize" value="${maxActive}">
		</property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:sql/*.xml">
		</property>
	</bean>
	
	<!-- (事务管 理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="todoDao" class="com.chengjf.sparkdemo.module.todo.dao.impl.TodoMybatisDao"
		scope="singleton" >
		<property name="factory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>
	
</beans>